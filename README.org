

* pRasterBlaster 
*** Buildling: 
Run the following commands in the source directory, be sure to set the MPICC variable to your c++ mpi wrapper:

autoreconf -iv
./configure MPICC=mpiCC
make


*** Use:
The default binary is a simple program that will reproject rasters in
parallel using mode statistical resampling. The program takes the
following parameters:

src/prasterblaster  [-n <partition count>] -p <output projection srs> [-f <fill value>] [-r resampler] <input raster path> <output raster path> 

**** Option descriptions
+ -p, --projection=
  The projection is specified using a proj.4 parameter string. For example:
  -p "+proj=latlong"
  specifies and unprojected dataset.
  -p "+proj=moll"
  specifies the Mollweide projection.

+ -n, --partition-count= 

  This parameter specifies the number of partitions to divide the
  rasters into.

  For example:
  -n 500 
  specifies 500 partitions


+ -f, --fill-value=

  This parameter specifies a value to assign to pixels outside of the
  projected area.

  For example: --fill-value=100 

  Specifies the fill value to be 100. How the value is interpreted
  depends on the type of the raster pixels. I.E. you specify a float
  and the raster value is integral the fill value will be truncated.

+ -r, --resampler=

  This parameter specifies a resampler to use to calculate output values.

  Possible values: Min, Max, Mean, Mode, Bilinear, 

+ <input raster path>, <output raster path>

  These specify the locations of input and output rasters. The input
  must be in geotiff. The output will be written in geotiff.


For example:

src/prasterblaster -f 254 -r Min -n 100 -p "+proj=moll" \
                   tests/testdata/glc_geographic_30sec.tif \
		   tests/testdata/glc_mollweide_30sec.tif 

This will produce a raster in the Mollweide projection.

